$block: '.hex-';

@mixin make-grid-item($amount) {
    @for $i from 1 through $amount {
        &:nth-of-type(#{$amount}n + #{$i}) {
            grid-column: #{$i + $i - 1} / span 3;
            @if $i % 2 == 0 {
                grid-row: calc(var(--counter) + var(--counter) - 1) / span 2;
            }
        }
    }

    @for $i from 1 through 20 {
        &:nth-of-type(n + #{$i * $amount + 1}) {
            --counter: #{$i + 1};
        }
    }
}

#{$block} {
    display: flex;
	justify-content: center;

    &list {
        --amount: 1;
        position: relative;
        padding: 0;
		margin: 0;
		list-style-type: none;
		display: grid;
        grid-template-columns: repeat(var(--amount), 1fr 2fr) 1fr;
		grid-gap: 0.5rem 1rem;
    }

    &item {
		pointer-events: none;
        position: relative;
		grid-column: 1 / span 3;
		grid-row: calc(var(--counter) + var(--counter)) / span 2;
		height: 0;
		padding-bottom: 90%;
		filter: none;
		transition: filter 0.5s;
    }

	&item:hover {
		filter: drop-shadow(0 0 10px rgba($red, 1));
	}

    &content {
		pointer-events: auto;
        position: absolute;
		height: 100%;
		width: 100%;
		clip-path: polygon(75% 0, 100% 50%, 75% 100%, 25% 100%, 0 50%, 25% 0);
		display: flex;
		flex-direction: column;
		justify-content: center;
		align-items: center;
		padding: 2rem 25%;
		text-decoration: none;
		text-align: center;
    }

	&content a img {
		transition: transform 0.5s ease-in-out;
	}

	&content a img:hover {
		transform: scale(1.15);
		transition: transform 0.5s ease-in-out;
	}
}

@media screen
and (min-width: 480px) {
	#{$block} {
		&list {
			--amount: 2;
			--counter: 1;
			grid-gap: 0.5rem 1rem;
		}

		&item {
			@include make-grid-item(2);
		}
	}
}